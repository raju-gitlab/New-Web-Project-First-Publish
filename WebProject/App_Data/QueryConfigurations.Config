<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <!--<section name="EcommCategoryLogQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="EcommProductLogQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="EcommProductAttributeLogQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="EcommProductSpecificationLogQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="ControlMasterQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="SalesQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="CartQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="DocumentMasterQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="VoucherQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="ProjectQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="TaxQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="OrganizationQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="DiscountQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="PhotoMosaicStockQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="PhotoMosaicGalleryQuerySettings" type="System.Configuration.NameValueSectionHandler"/>
    <section name="AppointmentScheduleQuerySettings" type="System.Configuration.NameValueSectionHandler"/>
    <section name="MailMetaDataConfigQuerySettings" type="System.Configuration.NameValueSectionHandler"/>
    <section name="DeliveryConfigQuerySettings" type="System.Configuration.NameValueSectionHandler"/>
    <section name="TemplateConfigQuerySettings" type="System.Configuration.NameValueSectionHandler"/>
    <section name="ProductionBatchQuerySettings" type="System.Configuration.NameValueSectionHandler"/>-->
    <section name="BookQuerySettings" type="System.Configuration.NameValueSectionHandler"/>
    <!--<section name="BookChapterQuerySettings" type="System.Configuration.NameValueSectionHandler"/>********************************************-->
   <!-- <section name="BookReviewQueryConfigurations" type="System.Configuration.NameValueSectionHandler" />-->

 </configSections>
  <BookQuerySettings>
    <add key="CheckUserSubscriptionByUserId" value="
       IF ((SELECT um.UserId FROM UserMembership um WHERE um.UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)) != 0 AND ((SELECT um.IsSubscribed FROM UserMembership um WHERE um.UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)) != 0))
	  BEGIN
		  UPDATE UserMembership SET RemainTime = (SELECT DATEDIFF(DAY,GETUTCDATE(),(SELECT um.MemberShipExpiryDate FROM UserMembership um WHERE um.UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)))) WHERE UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)
		  SELECT um.RemainTime FROM UserMembership um WHERE UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)
		  	IF((SELECT um.RemainTime FROM UserMembership um WHERE UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)) = 0)
			      BEGIN
            	UPDATE UserMembership SET IsSubscribed = 0 WHERE (UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid))
            END
    END
 ELSE
	  BEGIN
    	SELECT -1
    END
      ;"></add>

    <add key="AddNewSubscription" value="
      	IF NOT EXISTS(SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)
			 BEGIN
             	SELECT 0;
             END
			ELSE
			 BEGIN
             	IF NOT EXISTS(SELECT um.UserId FROM UserMembership um WHERE um.UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid))
					         BEGIN
                    	INSERT INTO UserMembership (UserId, MemberShipId, SubscriptionDate, IsSubscribed, MemberShipExpiryDate)
	                    VALUES ((SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid), (SELECT Id FROM Membership M WHERE M.MembershipGuid = @MembershipGuid), GETUTCDATE(), 1 , (SELECT DATEADD(MONTH,(SELECT m.PlanDuration FROM Membership M WHERE M.MembershipGuid = @MembershipGuid),GETUTCDATE())))
					           	UPDATE UserMembership SET RemainTime = (SELECT DATEDIFF(DAY,GETUTCDATE(),(SELECT um.MemberShipExpiryDate FROM UserMembership um WHERE um.UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)))) WHERE UserId IN (SELECT urd.Regid FROM UserRegistrationDetails urd WHERE urd.UserGuid = @UserGuid)
                    END
				      ELSE
					        BEGIN
                    SELECT -1;
                  END
         END
      ;"></add>

    <add key="GetEventRegistrationDetails" value="
      	SELECT FirstName , LastName ,EntryTicketId from EventRegistrations WHERE EventId IN(SELECT Id from Event WHERE EventGuid = @EventGuid)
      ;"></add>

    <add key="BookEvent" value="
      	insert into EventRegistrations(EventId, FirstName, LastName, TicketQuantity, PhoneNumber,RemainSeats, TicketId,RegistrationStatus,UserGuid,EventScheduleID,Email,BookingDate) 
        VALUES
        (@EventId, @FirstName, @LastName, @TicketQuantity, @PhoneNumber,@RemainSeats,SUBSTRING(CAST(NEWID()as NVARCHAR(MAX)),1,6),@RegistrationStatus,@UserGuid,@EventScheduleID,@Email,Getdate());SELECT @@IDENTITY
      ;"></add>
  
       <add key="GetEventById" value="
         select EventName, Place, FromDate, ToDate, TotalRegistration, EventDescription, [Year], OrganizationName, OrganizationDescription, Contact
         FROM Event e
         INNER JOIN Organization o ON e.OrganizationId = o.Id
         WHERE e.EventGuid = @EventGuid AND e.IsActive = 1 and e.EventStatus = 'OPEN'
      ;"></add>
  
     <add key="GetAllActiveOpenEvent" value="
         select EventName, Place, [Date] ,FromDate, ToDate,Location,[Image], OrganizationName
         FROM Event e
         INNER JOIN Organization o ON e.OrganizationId = o.Id
         WHERE  e.IsActive = 1 and e.EventStatus IN ('Upcoming','open')
      ;"></add>
  
      <add key="GetUpcomingEvent" value="
         select EventName, Place, [Date] ,FromDate, ToDate,Location,[Image], OrganizationName
         FROM Event e
         INNER JOIN Organization o ON e.OrganizationId = o.Id
         WHERE  e.IsActive = 1 and e.EventStatus = 'Upcoming'
      ;"></add>
  
      <add key="GetCanceldEvent" value="
        select EventName, Place, [Date] ,FromDate, ToDate,Location,[Image], OrganizationName,RegistrationStatus,er.TicketId,er.FirstName,er.LastName,er.TicketQuantity
        FROM Event e
        INNER JOIN Organization o ON e.OrganizationId = o.Id
        LEFT JOIN EventRegistrations er ON e.Id = er.EventId 
        WHERE er.RegistrationStatus = 'Cancelled'
      ;"></add>

    <add key="CheckEvent" value="
        IF not EXISTS (SELECT e.EventName,e.EventGuid  from Event e WHERE e.EventGuid = @EventGuid and e.EventStatus = 'Open' )
        select 0
        ELSE
        SELECT 1
      ;"></add>
    
    <add key="CheckEventBookingPerDay" value="
       IF((SELECT CONVERT (DATE, (select er.Bookingdate from EventRegistrations er WHERE er.Email = @Email and er.PhoneNumber = @PhoneNumber))) = (SELECT CONVERT (DATE, GETDATE())))
       SELECT 0;
       ELSE
       SELECT 1;
      ;"></add>
  
    <add key="CheckCredentials" value="
       	IF EXISTS(SELECT *FROM UserRegistrationDetails urd WHERE urd.UserName = @UserName)
		    select 1;
			   ELSE IF EXISTS(SELECT *FROM UserRegistrationDetails urd WHERE urd.Email = @Email)
			   select 2;
			   ELSE IF EXISTS(SELECT *FROM UserRegistrationDetails urd WHERE urd.PhoneNumber = @PhoneNumber)
			   select 3;
			   ELSE IF (@Password != @ConfirmPassword)
		       select 4;
		   ELSE
		   select 5;
      ;"></add>
  
   <add key="CreateNewRegistration" value="
       	INSERT INTO UserRegistrationDetails (UserName, FirstName, LastName, Gender, Password, ConfirmPassword, Email, PhoneNumber, DateOfBirth, Address, Town, Region, ZipCode, Country,RegistrationTime)
	    VALUES (@UserName,@FirstName,@LastName,@Gender,@Password,@ConfirmPassword,@Email,@PhoneNumber,@DateOfBirth,@Address,@Town,@Region,@ZipCode,@Country,GETDATE())
      ;"></add>
  
   <add key="query1" value="SELECT CatagoryName , CatagoryGuid , CatagoryImage,FromPrice , ToPrice , ProductName, ProductGUID, Picture ,BasePrice , OldPrice FROM Catagory 
                            INNER JOIN Product p ON Catagory.Id = p.Id ;"></add>
  <!--BasePrice and OldPrice needed to add-->
  <add key="GetProductById" value="select p.ProductName , p.ShortDescription , p.FullDescription,p.Price,p.ProductGUID,p.ProductCode,p.Picture,p.StockQuantity,p.VideoURL,
           w.WarrentyGuid, w.WarrentyPeriod,
           s.ServiceDescription1, s.ServiceDescription2, s.ServiceDescription3, s.ServiceDescription4, s.ServiceGuid,
           sr.SellerName,rar.RatingCount, rar.ReviewCount, rar.RatingPercentage, rar.ReviewMessege , rar.Guid , c.CatagoryName, c.CatagoryGuid
           from Product p
           LEFT JOIN Warrenty w ON p.WarrantyId = w.Id
           LEFT JOIN [Service] s ON p.ServicesId = s.Id
           LEFT JOIN Seller sr on p.SellerId = sr.Id
           left JOIN ReviewAndRating rar on p.ReviewProductId = rar.Id
           Left JOIN catagory c on p.CategoryId = c.Id
           WHERE p.ProductGUID = @Guid;"></add>

    <add key="RelatedProducts" value="SELECT p.ProductName, p.Price ,p.ProductGUID , p.Picture, c.CatagoryName from Product p
          LEFT JOIN Catagory c ON p.CategoryId = c.Id
          WHERE p.ProductName LIKE CONCAT ('%' , @productName , '%') OR c.CatagoryName LIKE CONCAT ('%',@CatagoryName,'%');"></add>
  </BookQuerySettings>
</configuration>